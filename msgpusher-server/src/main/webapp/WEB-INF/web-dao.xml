<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
         http://java.sun.com/xml/ns/javaee/web-app.xsd">

    <display-name>南大先腾消息推送平台</display-name>

    <!-- param -->
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>message-delivery</param-value>
    </context-param>

    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>
    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>60000</param-value>
    </context-param>
    <!-- /WEB-INF/action-servlet.xml,
            /WEB-INF/classes/spring-plugins/spring-*.xml   -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/classes/spring-config.xml,
            /WEB-INF/classes/spring-security-dao.xml
        </param-value>
    </context-param>

    <filter>
        <filter-name>corsFilter</filter-name>
        <filter-class>com.centit.framework.filter.ResponseCorsFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>corsFilter</filter-name>
        <url-pattern>/service/*</url-pattern>
    </filter-mapping>
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
        <async-supported>true</async-supported>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>*.html</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/service/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/system/*</url-pattern>
    </filter-mapping>
    <!-- 过滤请求方式 -->
    <filter>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
        <async-supported>true</async-supported>
    </filter>
    <filter-mapping>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <url-pattern>/service/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <url-pattern>/system/*</url-pattern>
    </filter-mapping>
    <filter>
        <filter-name>requestThreadLocalFilter</filter-name>
        <filter-class>com.centit.framework.filter.RequestThreadLocalFilter</filter-class>
        <async-supported>true</async-supported>
    </filter>
    <filter-mapping>
        <filter-name>requestThreadLocalFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- CAS统一登出过滤器 -->
    <!--     <filter>
            <filter-name>CASSingleSignOutFilter</filter-name>
            <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
            <async-supported>true</async-supported>
        </filter>
        <filter-mapping>
            <filter-name>CASSingleSignOutFilter</filter-name>
            <url-pattern>/*</url-pattern>
        </filter-mapping>
     -->
    <!-- spring Security 认证与权限管理-->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <async-supported>true</async-supported>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/login</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/logout</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/service/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/system/*</url-pattern>
    </filter-mapping>
    <!-- Spring Open Session In View Pattern filter
        这个过滤器可以将访问数据库退出到Jsp中对属性的调用，主要起的作用是 按需访问数据库-->
    <!--
     <filter>
         <filter-name>OpenSessionInViewFilter</filter-name>
         <filter-class>
             org.springframework.orm.hibernate4.support.OpenSessionInViewFilter
         </filter-class>
         <async-supported>true</async-supported>
         <init-param>
             <param-name>singleSession</param-name>
             <param-value>true</param-value>
         </init-param>
         <init-param>
             <param-name>flushMode</param-name>
             <param-value>AUTO</param-value>
         </init-param>
     </filter>
     <filter-mapping>
         <filter-name>OpenSessionInViewFilter</filter-name>
         <url-pattern>*.jsp</url-pattern>
     </filter-mapping>
     <filter-mapping>
         <filter-name>OpenSessionInViewFilter</filter-name>
         <url-pattern>/service/*</url-pattern>
     </filter-mapping>
     <filter-mapping>
         <filter-name>OpenSessionInViewFilter</filter-name>
         <url-pattern>/system/*</url-pattern>
     </filter-mapping>
  -->
    <!-- com.centit.framework.web.StartupListener EXTENDS org.springframework.web.context.ContextLoaderListener -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- Listeners -->
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>

    <!-- <listener>
        <listener-class>com.centit.framework.listener.MessageComponentListener</listener-class>
    </listener> -->
    <!--  This listener is deployed in conjunction with the Spring plugin to enable the spring object
                factory and the autowiring interceptors.  This only necessary starting with the Chapter Nine
                version of the application, where Spring IoC is introduced.
    -->
    <servlet>
        <servlet-name>normal</servlet-name>
        <servlet-class>com.centit.framework.core.controller.SimpleDispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc-config/normal-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>
    <servlet-mapping>
        <servlet-name>normal</servlet-name>
        <url-pattern>/service/*</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>system</servlet-name>
        <servlet-class>com.centit.framework.core.controller.SimpleDispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc-config/system-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>
    <servlet-mapping>
        <servlet-name>system</servlet-name>
        <url-pattern>/system/*</url-pattern>
    </servlet-mapping>

    <!-- CAS统一登出监听器 -->
    <!--  <listener>
         <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
     </listener> -->
    <jsp-config>
        <taglib>
            <taglib-uri>http://www.centit.com/el/coderepo</taglib-uri>
            <taglib-location>/WEB-INF/coderepo.tld</taglib-location>
        </taglib>
    </jsp-config>
    <error-page>
        <error-code>404</error-code>
        <location>/system/exception/error/404</location>
    </error-page>
    <error-page>
        <error-code>400</error-code>
        <location>/system/exception/error/400</location>
    </error-page>
    <error-page>
        <error-code>401</error-code>
        <location>/system/exception/error/401</location>
    </error-page>
    <error-page>
        <error-code>403</error-code>
        <location>/system/exception/error/403</location>
    </error-page>

    <!-- other -->
    <session-config>
        <session-timeout>120</session-timeout>
    </session-config>
    <welcome-file-list>
        <welcome-file>/index.jsp</welcome-file>
    </welcome-file-list>
</web-app>